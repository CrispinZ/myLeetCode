class Solution:
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        # flag
        # 0 : 从左到右
        # 1 ： 从上到下
        # 2 ： 从右到左
        # 3 ： 从小到上
        if not matrix:
            return []
        m = len(matrix)
        n = len(matrix[0])
        u, d, l, r = 0, m, -1, n
        res = []
        flag = 0
        while(l <= (r - 1) and (d - 1) >= u):
            if(flag == 0):
                res += matrix[u][l + 1 : r]
                flag = 1
                r -= 1
            elif(flag == 1):
                for i in range(u + 1, d):
                    res.append(matrix[i][r])
                flag = 2
                d -= 1
            elif(flag == 2):
                res += list(reversed(matrix[d][l + 1 : r]))
                flag = 3
                l += 1
            else:
                for i in range(d - 1, u, -1):
                    res.append(matrix[i][l])
                flag = 0
                u += 1
            #print u,d,l,r
            #print res
        return res
if __name__ == "__main__":
    print(Solution().spiralOrder([
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9]
    ]))
